--------------------------------------------------------
--  DDL for BRUKER
--------------------------------------------------------

  CREATE TABLE BRUKER (
    ID             NUMBER(19,0)                            NOT NULL,
	  AKTOER_ID      VARCHAR2(50 CHAR),
	  SPRAK_KODE     VARCHAR2(100 CHAR) DEFAULT 'NB'         NOT NULL,
	  VERSJON        NUMBER(19,0)       DEFAULT 0            NOT NULL,
	  OPPRETTET_AV   VARCHAR2(20 CHAR)  DEFAULT 'VL'         NOT NULL,
	  OPPRETTET_TID  TIMESTAMP (3)      DEFAULT systimestamp NOT NULL,
	  ENDRET_AV      VARCHAR2(20 CHAR),
	  ENDRET_TID     TIMESTAMP (3),
	  KL_SPRAAK_KODE VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('SPRAAK_KODE') VIRTUAL VISIBLE,
	  CONSTRAINT PK_BRUKER PRIMARY KEY (ID)

   );

   CREATE SEQUENCE SEQ_BRUKER MINVALUE 1 START WITH 1 INCREMENT BY 50 NOCACHE NOCYCLE;

   COMMENT ON TABLE BRUKER  IS 'Bruker som saken gjelder.';
   COMMENT ON COLUMN BRUKER.ID IS 'Primary Key';
   COMMENT ON COLUMN BRUKER.SPRAK_KODE IS 'FK:SPRAAK_KODE Fremmednøkkel til kodeverkstabellen som viser språk som er støttet og viser til brukerens foretrukne språk';
   COMMENT ON COLUMN BRUKER.KL_SPRAAK_KODE IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON COLUMN BRUKER.AKTOER_ID IS 'Aktørid utstedt av Nav Aktørregister for en Bruker (eks. Søker)';

--------------------------------------------------------
--  DDL for FAGSAK
--------------------------------------------------------

  CREATE TABLE FAGSAK (
    ID               NUMBER(19,0)                            NOT NULL,
    SAKSNUMMER       VARCHAR2(50 CHAR),
    FAGSAK_STATUS    VARCHAR2(100 CHAR)                      NOT NULL,
    BRUKER_ID        NUMBER(19,0)                            NOT NULL,
    VERSJON          NUMBER(19,0)       DEFAULT 0            NOT NULL,
    OPPRETTET_AV     VARCHAR2(20 CHAR)  DEFAULT 'VL'         NOT NULL,
    OPPRETTET_TID    TIMESTAMP (3)      DEFAULT systimestamp NOT NULL,
    ENDRET_AV        VARCHAR2(20 CHAR),
    ENDRET_TID       TIMESTAMP (3),
    KL_FAGSAK_STATUS VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('FAGSAK_STATUS') VIRTUAL VISIBLE,
    CONSTRAINT PK_FAGSAK   PRIMARY KEY (ID),
    CONSTRAINT FK_FAGSAK_1 FOREIGN KEY (BRUKER_ID) REFERENCES BRUKER (ID),
    CONSTRAINT FK_FAGSAK_2 FOREIGN KEY (FAGSAK_STATUS, KL_FAGSAK_STATUS) REFERENCES KODELISTE (KODE, KODEVERK)
   );

   CREATE UNIQUE INDEX UIDX_FAGSAK_1 ON FAGSAK (SAKSNUMMER);
   CREATE INDEX IDX_FAGSAK_1 ON FAGSAK (FAGSAK_STATUS);
   CREATE INDEX IDX_FAGSAK_2 ON FAGSAK (BRUKER_ID);

   CREATE SEQUENCE SEQ_FAGSAK MINVALUE 1 START WITH 1 INCREMENT BY 50 NOCACHE NOCYCLE;

   COMMENT ON TABLE FAGSAK  IS 'Fagsak for tilbakekreving. Alle behandling er koblet mot en fagsak.';
   COMMENT ON COLUMN FAGSAK.ID IS 'Primary Key';
   COMMENT ON COLUMN FAGSAK.SAKSNUMMER IS 'Saksnummer (som GSAK har mottatt)';
   COMMENT ON COLUMN FAGSAK.FAGSAK_STATUS IS 'FK:FAGSAK_STATUS Fremmednøkkel til kodeverkstabellen som inneholder oversikten over fagstatuser';
   COMMENT ON COLUMN FAGSAK.BRUKER_ID IS 'FK:BRUKER Fremmednøkkel til brukertabellen';
   COMMENT ON COLUMN FAGSAK.KL_FAGSAK_STATUS IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';

--------------------------------------------------------
--  DDL for BEHANDLING
--------------------------------------------------------

  CREATE TABLE BEHANDLING (
    ID                       NUMBER(19,0)                            NOT NULL,
	  FAGSAK_ID                NUMBER(19,0)                            NOT NULL,
	  BEHANDLING_STATUS        VARCHAR2(100 CHAR)                      NOT NULL,
	  BEHANDLING_TYPE          VARCHAR2(100 CHAR)                      NOT NULL,
	  OPPRETTET_DATO           DATE               DEFAULT sysdate      NOT NULL,
	  AVSLUTTET_DATO           DATE,
	  ANSVARLIG_SAKSBEHANDLER  VARCHAR2(100 CHAR),
	  ANSVARLIG_BESLUTTER      VARCHAR2(100 CHAR),
	  BEHANDLENDE_ENHET        VARCHAR2(10 CHAR),
	  BEHANDLENDE_ENHET_NAVN   VARCHAR2(320 CHAR),
	  BEHANDLENDE_ENHET_ARSAK  VARCHAR2(800 CHAR),
	  SIST_OPPDATERT_TIDSPUNKT TIMESTAMP (3),
	  AAPNET_FOR_ENDRING       VARCHAR2(1 CHAR)   DEFAULT 'N'          NOT NULL,
	  VERSJON                  NUMBER(19,0)       DEFAULT 0            NOT NULL,
	  OPPRETTET_AV             VARCHAR2(20 CHAR)  DEFAULT 'VL'         NOT NULL,
	  OPPRETTET_TID            TIMESTAMP (3)      DEFAULT systimestamp NOT NULL,
	  ENDRET_AV                VARCHAR2(20 CHAR),
	  ENDRET_TID               TIMESTAMP (3),
	  KL_BEHANDLING_STATUS     VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('BEHANDLING_STATUS') VIRTUAL VISIBLE ,
	  KL_BEHANDLING_TYPE       VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('BEHANDLING_TYPE') VIRTUAL VISIBLE ,
	  CONSTRAINT PK_BEHANDLING   PRIMARY KEY (ID),
	  CONSTRAINT FK_BEHANDLING_1 FOREIGN KEY (FAGSAK_ID)                               REFERENCES FAGSAK (ID),
	  CONSTRAINT FK_BEHANDLING_2 FOREIGN KEY (BEHANDLING_STATUS, KL_BEHANDLING_STATUS) REFERENCES KODELISTE (KODE, KODEVERK),
	  CONSTRAINT FK_BEHANDLING_3 FOREIGN KEY (BEHANDLING_TYPE, KL_BEHANDLING_TYPE)     REFERENCES KODELISTE (KODE, KODEVERK)
   );

   CREATE INDEX IDX_BEHANDLING_1 ON BEHANDLING (FAGSAK_ID);
   CREATE INDEX IDX_BEHANDLING_2 ON BEHANDLING (BEHANDLING_STATUS);
   CREATE INDEX IDX_BEHANDLING_3 ON BEHANDLING (BEHANDLING_TYPE);

   CREATE SEQUENCE SEQ_BEHANDLING MINVALUE 1 START WITH 1 INCREMENT BY 50 NOCACHE NOCYCLE;

   COMMENT ON TABLE BEHANDLING  IS 'Behandling av fagsak';
   COMMENT ON COLUMN BEHANDLING.ID IS 'Primary Key';
   COMMENT ON COLUMN BEHANDLING.FAGSAK_ID IS 'FK: FAGSAK Fremmednøkkel for kobling til fagsak';
   COMMENT ON COLUMN BEHANDLING.BEHANDLING_STATUS IS 'FK: BEHANDLING_STATUS Fremmednøkkel til tabellen som viser status på behandlinger';
   COMMENT ON COLUMN BEHANDLING.BEHANDLING_TYPE IS 'FK: BEHANDLING_TYPE Fremmedøkkel til oversikten over hvilken behandlingstyper som finnes';
   COMMENT ON COLUMN BEHANDLING.OPPRETTET_DATO IS 'Dato når behandlingen ble opprettet.';
   COMMENT ON COLUMN BEHANDLING.AVSLUTTET_DATO IS 'Dato når behandlingen ble avsluttet.';
   COMMENT ON COLUMN BEHANDLING.ANSVARLIG_SAKSBEHANDLER IS 'Id til saksbehandler som oppretter forslag til vedtak ved totrinnsbehandling.';
   COMMENT ON COLUMN BEHANDLING.ANSVARLIG_BESLUTTER IS 'Beslutter som har fattet vedtaket';
   COMMENT ON COLUMN BEHANDLING.BEHANDLENDE_ENHET IS 'NAV-enhet som behandler behandlingen';
   COMMENT ON COLUMN BEHANDLING.BEHANDLENDE_ENHET_NAVN IS 'Navn på behandlende enhet';
   COMMENT ON COLUMN BEHANDLING.BEHANDLENDE_ENHET_ARSAK IS 'Fritekst for hvorfor behandlende enhet har blitt endret';
   COMMENT ON COLUMN BEHANDLING.KL_BEHANDLING_STATUS IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON COLUMN BEHANDLING.KL_BEHANDLING_TYPE IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON COLUMN BEHANDLING.SIST_OPPDATERT_TIDSPUNKT IS 'Beskriver når grunnlagene til behandling ble sist innhentet';
   COMMENT ON COLUMN BEHANDLING.AAPNET_FOR_ENDRING IS 'Flagget settes når menyvalget Åpne behandling for endringer kjøres.';
   
   
--------------------------------------------------------
--  DDL for Table BEHANDLING_STEG_TYPE
--------------------------------------------------------

  CREATE TABLE BEHANDLING_STEG_TYPE (
    KODE                     VARCHAR2(100 CHAR)                       NOT NULL,
	  NAVN                     VARCHAR2(50 CHAR)                        NOT NULL,
	  BEHANDLING_STATUS_DEF    VARCHAR2(100 CHAR)                       NOT NULL,
	  BESKRIVELSE              VARCHAR2(2000 CHAR),
	  OPPRETTET_AV             VARCHAR2(20 CHAR)   DEFAULT 'VL'         NOT NULL,
	  OPPRETTET_TID            TIMESTAMP (3)       DEFAULT systimestamp NOT NULL,
	  ENDRET_AV                VARCHAR2(20 CHAR),
	  ENDRET_TID               TIMESTAMP (3),
	  KL_BEHANDLING_STATUS_DEF VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('BEHANDLING_STATUS') VIRTUAL VISIBLE ,
	  CONSTRAINT PK_BEHANDLING_STEG_TYPE PRIMARY KEY (KODE),
	  CONSTRAINT FK_BEHANDLING_STEG_TYPE_1 FOREIGN KEY (BEHANDLING_STATUS_DEF, KL_BEHANDLING_STATUS_DEF) REFERENCES KODELISTE (KODE, KODEVERK)
   );

   CREATE INDEX IDX_BEHANDLING_STEG_TYPE_1 ON BEHANDLING_STEG_TYPE (BEHANDLING_STATUS_DEF, KL_BEHANDLING_STATUS_DEF);

   COMMENT ON COLUMN BEHANDLING_STEG_TYPE.KODE IS 'PK - angir unik kode som identifiserer behandlingssteget';
   COMMENT ON COLUMN BEHANDLING_STEG_TYPE.NAVN IS 'Et lesbart navn for behandlingssteget, ment for visning el.';
   COMMENT ON COLUMN BEHANDLING_STEG_TYPE.BEHANDLING_STATUS_DEF IS 'Definert status behandling settes i når steget kjøres';
   COMMENT ON COLUMN BEHANDLING_STEG_TYPE.BESKRIVELSE IS 'Beskrivelse/forklaring av hva steget gjør';
   COMMENT ON TABLE BEHANDLING_STEG_TYPE  IS 'Angir definerte behandlingsteg med hvilket status behandling skal stå i når steget kjøres';

--------------------------------------------------------
--  DDL for Table BEHANDLING_ARSAK
--------------------------------------------------------

  CREATE TABLE BEHANDLING_ARSAK (
      ID                     NUMBER(19, 0)                     NOT NULL,
      BEHANDLING_ID          NUMBER(19, 0)                     NOT NULL,
      BEHANDLING_ARSAK_TYPE  VARCHAR2(20 CHAR)                 NOT NULL,
      VERSJON                NUMBER(19, 0) DEFAULT 0           NOT NULL,
      OPPRETTET_AV           VARCHAR2(20 CHAR) DEFAULT 'VL'    NOT NULL,
      OPPRETTET_TID          TIMESTAMP(3) DEFAULT systimestamp NOT NULL,
      ENDRET_AV              VARCHAR2(20 CHAR),
      ENDRET_TID             TIMESTAMP(3),
      ORIGINAL_BEHANDLING_ID NUMBER(19, 0),
      BEROERT_BEHANDLING_ID  NUMBER(19, 0),
      MANUELT_OPPRETTET      VARCHAR2(1 CHAR) DEFAULT 'N'      NOT NULL,
      CONSTRAINT PK_BEHANDLING_ARSAK PRIMARY KEY (ID)
  );

  CREATE INDEX IDX_BEHANDLING_ARSAK_1 ON BEHANDLING_ARSAK (BEHANDLING_ID);
  CREATE INDEX IDX_BEHANDLING_ARSAK_2 ON BEHANDLING_ARSAK (ORIGINAL_BEHANDLING_ID);
  CREATE INDEX IDX_BEHANDLING_ARSAK_3 ON BEHANDLING_ARSAK (BEROERT_BEHANDLING_ID);

  CREATE SEQUENCE SEQ_BEHANDLING_ARSAK MINVALUE 1000000 START WITH 1000000 INCREMENT BY 50 NOCACHE NOCYCLE;

  ALTER TABLE BEHANDLING_ARSAK ADD CONSTRAINT FK_BEHANDLING_ARSAK_1 FOREIGN KEY (BEHANDLING_ID) REFERENCES BEHANDLING (ID) ENABLE;
  ALTER TABLE BEHANDLING_ARSAK ADD CONSTRAINT FK_BEHANDLING_ARSAK_2 FOREIGN KEY (ORIGINAL_BEHANDLING_ID) REFERENCES BEHANDLING (ID) ENABLE;
  ALTER TABLE BEHANDLING_ARSAK ADD CONSTRAINT FK_BEHANDLING_ARSAK_3 FOREIGN KEY (BEROERT_BEHANDLING_ID) REFERENCES BEHANDLING (ID) ENABLE;

  COMMENT ON COLUMN BEHANDLING_ARSAK.ID IS 'Primary Key';
  COMMENT ON COLUMN BEHANDLING_ARSAK.BEHANDLING_ID IS 'FK: BEHANDLING Fremmednøkkel for kobling til behandling';
  COMMENT ON COLUMN BEHANDLING_ARSAK.BEHANDLING_ARSAK_TYPE IS 'FK: BEHANDLING_ARSAK_TYPE Fremmednøkkel til oversikten over hvilke årsaker en behandling kan begrunnes med';
  COMMENT ON COLUMN BEHANDLING_ARSAK.ORIGINAL_BEHANDLING_ID IS 'FK: BEHANDLING Fremmednøkkel for kobling til behandlingen denne raden i tabellen hører til';
  COMMENT ON COLUMN BEHANDLING_ARSAK.BEROERT_BEHANDLING_ID IS 'FK: BEHANDLING Fremmednøkkel fro kobling til behandlingen til berørt sak';
  COMMENT ON COLUMN BEHANDLING_ARSAK.MANUELT_OPPRETTET IS 'Angir om behandlingsårsaken oppstod når en behandling ble manuelt opprettet. Brukes til å utlede om behandlingen ble manuelt opprettet.';
  COMMENT ON TABLE BEHANDLING_ARSAK IS 'Årsak for rebehandling';


--------------------------------------------------------
--  DDL for Table VURDERINGSPUNKT_DEF
--------------------------------------------------------

  CREATE TABLE VURDERINGSPUNKT_DEF (
      KODE                 VARCHAR2(100 CHAR)                        NOT NULL,
    	BEHANDLING_STEG      VARCHAR2(100 CHAR)                        NOT NULL,
    	VURDERINGSPUNKT_TYPE VARCHAR2(20 CHAR)    DEFAULT 'UT'         NOT NULL,
    	NAVN                 VARCHAR2(50 CHAR)                         NOT NULL,
    	BESKRIVELSE          VARCHAR2(2000 CHAR),
    	OPPRETTET_AV         VARCHAR2(20 CHAR)    DEFAULT 'VL'         NOT NULL,
	    OPPRETTET_TID        TIMESTAMP (3)        DEFAULT systimestamp NOT NULL,
	    ENDRET_AV            VARCHAR2(20 CHAR),
	    ENDRET_TID           TIMESTAMP (3),
	    CONSTRAINT PK_VURDERINGSPUNKT_DEF PRIMARY KEY (KODE),
	    CONSTRAINT FK_VURDERINGSPUNKT_DEF_1 FOREIGN KEY (BEHANDLING_STEG) REFERENCES BEHANDLING_STEG_TYPE (KODE)
   );

   CREATE INDEX IDX_VURDERINGSPUNKT_DEF_1 ON VURDERINGSPUNKT_DEF (BEHANDLING_STEG);
   CREATE UNIQUE INDEX UIDX_VURDERINGSPUNKT_DEF_1 ON VURDERINGSPUNKT_DEF (BEHANDLING_STEG, VURDERINGSPUNKT_TYPE);

   ALTER TABLE VURDERINGSPUNKT_DEF ADD CHECK (vurderingspunkt_type IN ('UT', 'INN')) ENABLE;

   COMMENT ON TABLE VURDERINGSPUNKT_DEF  IS 'Internt kodeverk for definisjoner av vurderingspunkt.';
   COMMENT ON COLUMN VURDERINGSPUNKT_DEF.KODE IS 'Kodeverk Primary Key';
   COMMENT ON COLUMN VURDERINGSPUNKT_DEF.BEHANDLING_STEG IS 'FK:BEHANDLING_STEG_TYPE Fremmednøkkel til tabellen som viser krav til status for at steget skal kunne kjøres';
   COMMENT ON COLUMN VURDERINGSPUNKT_DEF.VURDERINGSPUNKT_TYPE IS 'Angir om det er et inngående eller utgående vurderingspunkt. Verdier: INN eller UT.';
   COMMENT ON COLUMN VURDERINGSPUNKT_DEF.NAVN IS 'Lesbart navn på definisjon av vurderingspunkt';
   COMMENT ON COLUMN VURDERINGSPUNKT_DEF.BESKRIVELSE IS 'Utdypende beskrivelse av koden';


--------------------------------------------------------
--  DDL for Table AKSJONSPUNKT_DEF
--------------------------------------------------------

  CREATE TABLE AKSJONSPUNKT_DEF (
    KODE                           VARCHAR2(50 CHAR)                       NOT NULL,
	  NAVN                           VARCHAR2(70 CHAR)                       NOT NULL,
	  VURDERINGSPUNKT                VARCHAR2(100 CHAR)                      NOT NULL,
	  BESKRIVELSE                    VARCHAR2(4000 CHAR),
	  VILKAR_TYPE                    VARCHAR2(100 CHAR),
	  TOTRINN_BEHANDLING_DEFAULT     VARCHAR2(1 CHAR)                        NOT NULL,
	  AKSJONSPUNKT_TYPE              VARCHAR2(100 CHAR) DEFAULT 'MANU'       NOT NULL,
	  FRIST_PERIODE                  VARCHAR2(20 CHAR),
	  TILBAKEHOPP_VED_GJENOPPTAKELSE CHAR(1 BYTE)       DEFAULT 'N'          NOT NULL,
	  LAG_UTEN_HISTORIKK             VARCHAR2(1 BYTE)   DEFAULT 'N'          NOT NULL,
	  SKJERMLENKE_TYPE               VARCHAR2(100 CHAR)                      NOT NULL,
	  OPPRETTET_AV                   VARCHAR2(20 CHAR)  DEFAULT 'VL'         NOT NULL,
	  OPPRETTET_TID                  TIMESTAMP (3)      DEFAULT systimestamp NOT NULL,
	  ENDRET_AV                      VARCHAR2(20 CHAR),
	  ENDRET_TID                     TIMESTAMP (3),
	  KL_AKSJONSPUNKT_TYPE           VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('AKSJONSPUNKT_TYPE') VIRTUAL VISIBLE ,
	  KL_VILKAR_TYPE                 VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('VILKAR_TYPE') VIRTUAL VISIBLE ,
	  KL_SKJERMLENKE_TYPE            VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('SKJERMLENKE_TYPE') VIRTUAL VISIBLE,
	  CONSTRAINT PK_AKSJONSPUNKT_DEF PRIMARY KEY (KODE),
	  CONSTRAINT FK_AKSJONSPUNKT_DEF_1 FOREIGN KEY (VURDERINGSPUNKT) REFERENCES VURDERINGSPUNKT_DEF (KODE),
	  CONSTRAINT FK_AKSJONSPUNKT_DEF_2 FOREIGN KEY (AKSJONSPUNKT_TYPE, KL_AKSJONSPUNKT_TYPE) REFERENCES KODELISTE (KODE, KODEVERK),
	  CONSTRAINT FK_AKSJONSPUNKT_DEF_3 FOREIGN KEY (VILKAR_TYPE, KL_VILKAR_TYPE) REFERENCES KODELISTE (KODE, KODEVERK),
	  CONSTRAINT FK_AKSJONSPUNKT_DEF_4 FOREIGN KEY (SKJERMLENKE_TYPE, KL_SKJERMLENKE_TYPE) REFERENCES KODELISTE (KODE, KODEVERK)
   );

  ALTER TABLE AKSJONSPUNKT_DEF ADD CONSTRAINT CHK_ALLTID_TOTRINNSBEH CHECK (TOTRINN_BEHANDLING_DEFAULT='J' OR TOTRINN_BEHANDLING_DEFAULT='N') ENABLE;
  ALTER TABLE AKSJONSPUNKT_DEF ADD CHECK (LAG_UTEN_HISTORIKK IN ('J','N')) ENABLE;

  CREATE INDEX IDX_AKSJONSPUNKT_DEF_1 ON AKSJONSPUNKT_DEF (VURDERINGSPUNKT);
  CREATE INDEX IDX_AKSJONSPUNKT_DEF_2 ON AKSJONSPUNKT_DEF (AKSJONSPUNKT_TYPE);
  CREATE INDEX IDX_AKSJONSPUNKT_DEF_3 ON AKSJONSPUNKT_DEF (VILKAR_TYPE);
  CREATE INDEX IDX_AKSJONSPUNKT_DEF_4 ON AKSJONSPUNKT_DEF (SKJERMLENKE_TYPE, KL_SKJERMLENKE_TYPE);

   COMMENT ON TABLE AKSJONSPUNKT_DEF  IS 'Kodetabell som definerer de forskjellige typene aksjonspunkter.';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.KODE IS 'Kodeverk Primary Key';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.NAVN IS 'Lesbart navn på aksjonspunktdefinisjon';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.VURDERINGSPUNKT IS 'FK: VURDERINGSPUNKT_DEF Fremmednøkkel til tabellen som inneholder beskrivelsen av de ulike vurderingspunktene';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.BESKRIVELSE IS 'Utdypende beskrivelse av koden';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.VILKAR_TYPE IS 'FK: VILKAR_TYPE Fremmednøkkel til tabellen som forklarer i hvilket vilkår aksjonspunktet skal løses';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.TOTRINN_BEHANDLING_DEFAULT IS 'Indikerer om dette aksjonspunktet alltid skal kreve totrinnsbehandling';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.AKSJONSPUNKT_TYPE IS 'FK: AKSJONSPUNKT_TYPE Fremmednøkkel til tabellen som forteller om aksjonspunktet kan løses automatisk, eller om det krever amnuell avklaring';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.FRIST_PERIODE IS 'Lengde på fristperioden for behandling av aksjonspunkt med denne definisjonen';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.KL_AKSJONSPUNKT_TYPE IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.KL_VILKAR_TYPE IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.TILBAKEHOPP_VED_GJENOPPTAKELSE IS 'Skal det hoppes tilbake slik at steget aksjonspunktet er koblet til kjøres på nytt';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.LAG_UTEN_HISTORIKK IS 'Skal det ikke lages historikkinnslag ved opprettelse av aksjonspunkt';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.SKJERMLENKE_TYPE IS 'FK: SKJERMLENKE_TYPE Fremmednøkkel til tabellen for skjermlenker';
   COMMENT ON COLUMN AKSJONSPUNKT_DEF.KL_SKJERMLENKE_TYPE IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';

--------------------------------------------------------
--  DDL for Table AKSJONSPUNKT_UTELUKKENDE
--------------------------------------------------------

CREATE TABLE AKSJONSPUNKT_UTELUKKENDE (
  AP1 VARCHAR2(50 CHAR) NOT NULL,
  AP2 VARCHAR2(50 CHAR) NOT NULL,
  OPPRETTET_AV VARCHAR2(20 CHAR) DEFAULT 'VL' NOT NULL,
  OPPRETTET_TID TIMESTAMP (3) DEFAULT systimestamp NOT NULL,
  ENDRET_AV VARCHAR2(20 CHAR),
  ENDRET_TID TIMESTAMP (3),
  CONSTRAINT PK_AP_UTELUKKENDE PRIMARY KEY (AP1, AP2),
  CONSTRAINT FK_AP_UTELUKKENDE_1 FOREIGN KEY (AP1) REFERENCES AKSJONSPUNKT_DEF (KODE),
  CONSTRAINT FK_AP_UTELUKKENDE_2 FOREIGN KEY (AP2) REFERENCES AKSJONSPUNKT_DEF (KODE)
);

CREATE INDEX IDX_AP_UTELUKKENDE_1 ON AKSJONSPUNKT_UTELUKKENDE (AP1);
CREATE INDEX IDX_AP_UTELUKKENDE_2 ON AKSJONSPUNKT_UTELUKKENDE (AP2);

COMMENT ON COLUMN AKSJONSPUNKT_UTELUKKENDE.AP1 IS 'Aksjonspunkt 1';
COMMENT ON COLUMN AKSJONSPUNKT_UTELUKKENDE.AP2 IS 'Aksjonspunkt 2';
COMMENT ON TABLE AKSJONSPUNKT_UTELUKKENDE  IS 'Relasjon mellom aksjonspunktsdefinisjoner som er gjensidig utelukkende (dvs. kan ikke være i samme behandling samtidig)';

--------------------------------------------------------
--  DDL for Table AKSJONSPUNKT
--------------------------------------------------------

  CREATE TABLE AKSJONSPUNKT (
  	ID                          NUMBER(19,0)                            NOT NULL,
	  PERIODE_FOM                 DATE,
	  PERIODE_TOM                 DATE,
	  BEGRUNNELSE                 VARCHAR2(4000 CHAR),
	  TOTRINN_BEHANDLING          VARCHAR2(1 CHAR)                        NOT NULL,
	  BESLUTTERS_BEGRUNNELSE      VARCHAR2(2000 CHAR),
	  TOTRINN_BEHANDLING_GODKJENT CHAR(1 BYTE),
	  BEHANDLING_STEG_FUNNET      VARCHAR2(100 CHAR),
	  AKSJONSPUNKT_STATUS         VARCHAR2(100 CHAR)                      NOT NULL,
	  AKSJONSPUNKT_DEF            VARCHAR2(50 CHAR)                       NOT NULL,
	  FRIST_TID                   TIMESTAMP (3),
	  VENT_AARSAK                 VARCHAR2(100 CHAR) DEFAULT '-'          NOT NULL,
	  BEHANDLING_ID               NUMBER(19,0)                            NOT NULL,
	  REAKTIVERING_STATUS         VARCHAR2(100 CHAR) DEFAULT 'AKTIV'      NOT NULL,
	  MANUELT_OPPRETTET           VARCHAR2(1 BYTE)   DEFAULT 'N'          NOT NULL,
	  REVURDERING                 VARCHAR2(1 CHAR)   DEFAULT 'N'          NOT NULL,
	  VERSJON                     NUMBER(19,0)       DEFAULT 0            NOT NULL,
	  OPPRETTET_AV                VARCHAR2(20 CHAR)  DEFAULT 'VL'         NOT NULL,
	  OPPRETTET_TID               TIMESTAMP (3)      DEFAULT systimestamp NOT NULL,
	  ENDRET_AV                   VARCHAR2(20 CHAR),
	  ENDRET_TID                  TIMESTAMP (3),
	  KL_AKSJONSPUNKT_STATUS      VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('AKSJONSPUNKT_STATUS') VIRTUAL VISIBLE ,
	  KL_VENT_AARSAK              VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('VENT_AARSAK') VIRTUAL VISIBLE ,
	  KL_REAKTIVERING_STATUS      VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('REAKTIVERING_STATUS') VIRTUAL VISIBLE ,
	  CONSTRAINT PK_AKSJONSPUNKT PRIMARY KEY (ID),
	  CONSTRAINT FK_AKSJONSPUNKT_1 FOREIGN KEY (BEHANDLING_STEG_FUNNET) REFERENCES BEHANDLING_STEG_TYPE (KODE),
	  CONSTRAINT FK_AKSJONSPUNKT_2 FOREIGN KEY (BEHANDLING_ID) REFERENCES BEHANDLING (ID),
	  CONSTRAINT FK_AKSJONSPUNKT_4 FOREIGN KEY (AKSJONSPUNKT_DEF) REFERENCES AKSJONSPUNKT_DEF (KODE),
	  CONSTRAINT FK_AKSJONSPUNKT_5 FOREIGN KEY (VENT_AARSAK, KL_VENT_AARSAK) REFERENCES KODELISTE (KODE, KODEVERK),
	  CONSTRAINT FK_AKSJONSPUNKT_6 FOREIGN KEY (REAKTIVERING_STATUS, KL_REAKTIVERING_STATUS) REFERENCES KODELISTE (KODE, KODEVERK),
	  CONSTRAINT FK_AKSJONSPUNKT_7 FOREIGN KEY (AKSJONSPUNKT_STATUS, KL_AKSJONSPUNKT_STATUS) REFERENCES KODELISTE (KODE, KODEVERK)
   );

  CREATE UNIQUE INDEX IDX_AKSJONSPUNKT_1 ON AKSJONSPUNKT (BEHANDLING_ID, AKSJONSPUNKT_DEF);
  CREATE INDEX IDX_AKSJONSPUNKT_2 ON AKSJONSPUNKT (BEHANDLING_STEG_FUNNET);
  CREATE INDEX IDX_AKSJONSPUNKT_3 ON AKSJONSPUNKT (AKSJONSPUNKT_DEF);
  CREATE INDEX IDX_AKSJONSPUNKT_4 ON AKSJONSPUNKT (VENT_AARSAK);
  CREATE INDEX IDX_AKSJONSPUNKT_5 ON AKSJONSPUNKT (AKSJONSPUNKT_STATUS);
  CREATE INDEX IDX_AKSJONSPUNKT_DEF_6 ON AKSJONSPUNKT (REAKTIVERING_STATUS);

  ALTER TABLE AKSJONSPUNKT ADD CONSTRAINT CHK_MANUELT_OPPRETTET CHECK (MANUELT_OPPRETTET = 'J' OR MANUELT_OPPRETTET = 'N') ENABLE;
  ALTER TABLE AKSJONSPUNKT ADD CONSTRAINT CHK_UNIQUE_BEH_AD UNIQUE (BEHANDLING_ID, AKSJONSPUNKT_DEF);
  ALTER TABLE AKSJONSPUNKT ADD CONSTRAINT CHK_TOTRINNSBEHANDLING_GODKJ CHECK (TOTRINN_BEHANDLING_GODKJENT='J' OR TOTRINN_BEHANDLING_GODKJENT='N') ENABLE;
  ALTER TABLE AKSJONSPUNKT ADD CONSTRAINT CHK_TOTRINNSBEHANDLING CHECK (TOTRINN_BEHANDLING='J' OR TOTRINN_BEHANDLING='N') ENABLE;

   CREATE SEQUENCE SEQ_AKSJONSPUNKT MINVALUE 1 START WITH 1 INCREMENT BY 50 NOCACHE NOCYCLE;

   COMMENT ON COLUMN AKSJONSPUNKT.ID IS 'Primary Key';
   COMMENT ON COLUMN AKSJONSPUNKT.PERIODE_FOM IS 'Angir starttidspunkt dersom aksjonspunktet gjelder en spesifikk periode. Brukes for aksjonspunkt som kan repteres flere ganger for en behandling.';
   COMMENT ON COLUMN AKSJONSPUNKT.PERIODE_TOM IS 'Angir sluttidspunkt dersom aksjonspunktet gjelder en spesifikk periode.';
   COMMENT ON COLUMN AKSJONSPUNKT.BEGRUNNELSE IS 'Begrunnelse for endringer gjort i forbindelse med aksjonspunktet.';
   COMMENT ON COLUMN AKSJONSPUNKT.TOTRINN_BEHANDLING IS 'Indikerer at aksjonspunkter krever en totrinnsbehandling';
   COMMENT ON COLUMN AKSJONSPUNKT.BESLUTTERS_BEGRUNNELSE IS 'Beslutters begrunnelse for hvorfor et aksjonspunkt må vurderes på nytt';
   COMMENT ON COLUMN AKSJONSPUNKT.TOTRINN_BEHANDLING_GODKJENT IS 'Beslutter har godkjent totrinnsbehandlingen';
   COMMENT ON COLUMN AKSJONSPUNKT.BEHANDLING_STEG_FUNNET IS 'Hvilket steg ble dette aksjonspunktet funnet i?';
   COMMENT ON COLUMN AKSJONSPUNKT.AKSJONSPUNKT_STATUS IS 'FK:AKSJONSPUNKT_STATUS Fremmednøkkel til tabellen som inneholder status på aksjonspunktene';
   COMMENT ON COLUMN AKSJONSPUNKT.AKSJONSPUNKT_DEF IS 'FK:AKSJONSPUNKT_DEF Fremmednøkkel til tabellen som inneholder definisjonene av aksjonspunktene';
   COMMENT ON COLUMN AKSJONSPUNKT.FRIST_TID IS 'Behandling blir automatisk gjenopptatt etter dette tidspunktet';
   COMMENT ON COLUMN AKSJONSPUNKT.KL_AKSJONSPUNKT_STATUS IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON COLUMN AKSJONSPUNKT.VENT_AARSAK IS 'Årsak for at behandling er satt på vent';
   COMMENT ON COLUMN AKSJONSPUNKT.BEHANDLING_ID IS 'Fremmednøkkel for kobling til behandling';
   COMMENT ON COLUMN AKSJONSPUNKT.KL_VENT_AARSAK IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON COLUMN AKSJONSPUNKT.REAKTIVERING_STATUS IS 'Angir om aksjonspunktet er aktivt. Inaktive aksjonspunkter er historiske som ble kopiert når en revurdering ble opprettet. De eksisterer for å kunne vise den opprinnelige begrunnelsen, uten at saksbehandler må ta stilling til det på nytt.';
   COMMENT ON COLUMN AKSJONSPUNKT.MANUELT_OPPRETTET IS 'Angir om aksjonspunktet ble opprettet manuelt. Typisk skjer dette ved overstyring, og når saksbehandler manuelt reaktiverer et historisk aksjonspunkt i en revurdering. Brukes når Behandlingskontroll skal rydde ved hopp.';
   COMMENT ON COLUMN AKSJONSPUNKT.KL_REAKTIVERING_STATUS IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON COLUMN AKSJONSPUNKT.REVURDERING IS 'Flagget settes på aksjonspunkter som kopieres i det en revurdering opprettes. Trengs for å kunne vurdere om aksjonspunktet er kandidat for totrinnskontroll dersom det har blitt en endring i aksjonspunktet under revurderingen.';
   COMMENT ON TABLE AKSJONSPUNKT  IS 'Aksjoner som en saksbehandler må utføre manuelt.';


--------------------------------------------------------
--  DDL for Table VURDER_PAA_NYTT_AARSAK
--------------------------------------------------------

  CREATE TABLE VURDER_PAA_NYTT_AARSAK (
    ID              NUMBER(19,0)                           NOT NULL,
	  AKSJONSPUNKT_ID NUMBER(19,0)                           NOT NULL,
	  AARSAK_TYPE     VARCHAR2(100 CHAR)                     NOT NULL,
	  OPPRETTET_AV    VARCHAR2(20 CHAR) DEFAULT 'VL'         NOT NULL,
	  OPPRETTET_TID   TIMESTAMP (3)     DEFAULT systimestamp NOT NULL,
	  ENDRET_AV       VARCHAR2(20 CHAR),
	  ENDRET_TID      TIMESTAMP (3),
	  KL_AARSAK_TYPE  VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('VURDER_AARSAK') VIRTUAL VISIBLE,
	  CONSTRAINT PK_VURDER_PAA_NYTT_AARSAK PRIMARY KEY (ID),
	  CONSTRAINT FK_VURDER_PAA_NYTT_AARSAK_1 FOREIGN KEY (AKSJONSPUNKT_ID) REFERENCES AKSJONSPUNKT (ID),
	  CONSTRAINT FK_VURDER_PAA_NYTT_AARSAK_2 FOREIGN KEY (AARSAK_TYPE, KL_AARSAK_TYPE) REFERENCES KODELISTE (KODE, KODEVERK)
   );

   CREATE SEQUENCE SEQ_VURDER_PAA_NYTT_AARSAK MINVALUE 1 START WITH 1 INCREMENT BY 50 NOCACHE NOCYCLE;

   CREATE INDEX IDX_VURDER_PAA_NYTT_AARSAK_1 ON VURDER_PAA_NYTT_AARSAK (AKSJONSPUNKT_ID);
   CREATE INDEX IDX_VURDER_PAA_NYTT_AARSAK_2 ON VURDER_PAA_NYTT_AARSAK (AARSAK_TYPE);

   COMMENT ON COLUMN VURDER_PAA_NYTT_AARSAK.ID IS 'Primary Key';
   COMMENT ON COLUMN VURDER_PAA_NYTT_AARSAK.AARSAK_TYPE IS 'Årsak for at aksjonspunkt må vurders på nytt';
   COMMENT ON COLUMN VURDER_PAA_NYTT_AARSAK.AKSJONSPUNKT_ID IS 'FK:AKSJONSPUNKT Fremmednøkkel til aksjonspunktet som må vurderes på nytt';
   COMMENT ON COLUMN VURDER_PAA_NYTT_AARSAK.KL_AARSAK_TYPE IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON TABLE VURDER_PAA_NYTT_AARSAK  IS 'Årsaken til at aksjonspunkt må vurderes på nytt';



--------------------------------------------------------
--  DDL for BEHANDLING_STEG_TILSTAND
--------------------------------------------------------

  CREATE TABLE BEHANDLING_STEG_TILSTAND(
    ID                     NUMBER(19,0)                            NOT NULL,
	  BEHANDLING_ID          NUMBER(19,0)                            NOT NULL,
	  BEHANDLING_STEG        VARCHAR2(100 CHAR)                      NOT NULL,
	  BEHANDLING_STEG_STATUS VARCHAR2(100 CHAR)                      NOT NULL,
	  VERSJON                NUMBER(19,0)       DEFAULT 0            NOT NULL,
	  OPPRETTET_AV           VARCHAR2(20 CHAR)  DEFAULT 'VL'         NOT NULL,
	  OPPRETTET_TID          TIMESTAMP (3)      DEFAULT systimestamp NOT NULL,
	  ENDRET_AV              VARCHAR2(20 CHAR),
	  ENDRET_TID             TIMESTAMP (3),
	  KL_BEHANDLING_STEG_STATUS VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('BEHANDLING_STEG_STATUS') VIRTUAL VISIBLE,
	  CONSTRAINT PK_BEHANDLING_STEG_TILSTAND PRIMARY KEY (ID),
	  CONSTRAINT FK_BEHANDLING_STEG_TILSTAND_1 FOREIGN KEY (BEHANDLING_ID) REFERENCES BEHANDLING (ID),
	  CONSTRAINT FK_BEHANDLING_STEG_TILSTAND_2 FOREIGN KEY (BEHANDLING_STEG) REFERENCES BEHANDLING_STEG_TYPE (KODE),
	  CONSTRAINT FK_BEHANDLING_STEG_TILSTAND_80 FOREIGN KEY (BEHANDLING_STEG_STATUS, KL_BEHANDLING_STEG_STATUS) REFERENCES KODELISTE (KODE, KODEVERK)
   );

  CREATE SEQUENCE SEQ_BEHANDLING_STEG_TILSTAND MINVALUE 1 START WITH 1 INCREMENT BY 50 NOCACHE NOCYCLE;

  CREATE INDEX IDX_BEHANDLING_STEG_TILSTAND_1 ON BEHANDLING_STEG_TILSTAND (BEHANDLING_ID);
  CREATE INDEX IDX_BEHANDLING_STEG_TILSTAND_2 ON BEHANDLING_STEG_TILSTAND (BEHANDLING_STEG_STATUS);
  CREATE INDEX IDX_BEHANDLING_STEG_TILSTAND_3 ON BEHANDLING_STEG_TILSTAND (BEHANDLING_STEG);

   COMMENT ON COLUMN BEHANDLING_STEG_TILSTAND.ID IS 'Primary Key';
   COMMENT ON COLUMN BEHANDLING_STEG_TILSTAND.BEHANDLING_ID IS 'FK: BEHANDLING Fremmednøkkel for kobling til behandlingen dette steget er tilknyttet';
   COMMENT ON COLUMN BEHANDLING_STEG_TILSTAND.BEHANDLING_STEG IS 'Hvilket BehandlingSteg som kjøres';
   COMMENT ON COLUMN BEHANDLING_STEG_TILSTAND.BEHANDLING_STEG_STATUS IS 'Status på steg: (ved) INNGANG, STARTET, VENTER, (ved) UTGANG, UTFØRT';
   COMMENT ON COLUMN BEHANDLING_STEG_TILSTAND.KL_BEHANDLING_STEG_STATUS IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON TABLE BEHANDLING_STEG_TILSTAND  IS 'Angir tilstand for behandlingsteg som kjøres';


--------------------------------------------------------
--  DDL for Table BEHANDLING_TYPE_STEG_SEKV
--------------------------------------------------------

  CREATE TABLE BEHANDLING_TYPE_STEG_SEKV (
    ID                   NUMBER(19,0)                            NOT NULL,
	  BEHANDLING_TYPE      VARCHAR2(100 CHAR)                      NOT NULL,
	  BEHANDLING_STEG_TYPE VARCHAR2(100 CHAR)                      NOT NULL,
	  SEKVENS_NR           NUMBER(5,0)                             NOT NULL,
	  OPPRETTET_AV         VARCHAR2(20 CHAR)  DEFAULT 'VL'         NOT NULL,
	  OPPRETTET_TID        TIMESTAMP (3)      DEFAULT systimestamp NOT NULL,
	  ENDRET_AV            VARCHAR2(20 CHAR),
	  ENDRET_TID           TIMESTAMP (3),
	  KL_BEHANDLING_TYPE   VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('BEHANDLING_TYPE') VIRTUAL VISIBLE,
	  CONSTRAINT PK_BEHANDLING_TYPE_STEG_SEKV  PRIMARY KEY (ID),
	  CONSTRAINT FK_BEHANDLING_TYPE_STEG_SEK_1 FOREIGN KEY (BEHANDLING_STEG_TYPE)                REFERENCES BEHANDLING_STEG_TYPE (KODE),
	  CONSTRAINT FK_BEHANDLING_TYPE_STEG_SEK_2 FOREIGN KEY (BEHANDLING_TYPE, KL_BEHANDLING_TYPE) REFERENCES KODELISTE (KODE, KODEVERK)
   );

   CREATE SEQUENCE SEQ_BEHANDLING_TYPE_STEG_SEKV MINVALUE 1 START WITH 1 INCREMENT BY 50 NOCACHE NOCYCLE;

   CREATE INDEX UIDX_BEH_STEG_TYPE_SEKV_1 ON BEHANDLING_TYPE_STEG_SEKV (BEHANDLING_TYPE, BEHANDLING_STEG_TYPE);
   CREATE INDEX IDX_BEH_STEG_TYPE_SEKV_1  ON BEHANDLING_TYPE_STEG_SEKV (BEHANDLING_STEG_TYPE);

   ALTER TABLE BEHANDLING_TYPE_STEG_SEKV ADD CHECK (sekvens_nr > 0) ENABLE;

   COMMENT ON COLUMN BEHANDLING_TYPE_STEG_SEKV.ID IS 'Primary Key';
   COMMENT ON COLUMN BEHANDLING_TYPE_STEG_SEKV.BEHANDLING_TYPE IS 'FK: BEHANDLING_TYPE Fremmednøkkel til kodeverket for behandlingstyper';
   COMMENT ON COLUMN BEHANDLING_TYPE_STEG_SEKV.BEHANDLING_STEG_TYPE IS 'FK: BEHANDLING_STEG_TYPE Fremmednøkkel til tabellen som viser krav til status for at steget skal kunne kjøres';
   COMMENT ON COLUMN BEHANDLING_TYPE_STEG_SEKV.SEKVENS_NR IS 'Forteller når i sekvensen av steg i en behandling dette steget skal kjøres';
   COMMENT ON COLUMN BEHANDLING_TYPE_STEG_SEKV.KL_BEHANDLING_TYPE IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
   COMMENT ON TABLE BEHANDLING_TYPE_STEG_SEKV  IS 'Rekkefølgen av steg for de forskjellige typene behandling';

--------------------------------------------------------
--  DDL for Table BEHANDLING_RESULTAT
--------------------------------------------------------

  CREATE TABLE BEHANDLING_RESULTAT (
    ID                          NUMBER(19, 0) NOT NULL,
    BEHANDLING_ID               NUMBER(19, 0) NOT NULL,
    VERSJON                     NUMBER(19, 0)      DEFAULT 0 NOT NULL,
    OPPRETTET_AV                VARCHAR2(20 CHAR)  DEFAULT 'VL' NOT NULL,
    OPPRETTET_TID               TIMESTAMP(3)       DEFAULT systimestamp NOT NULL,
    ENDRET_AV                   VARCHAR2(20 CHAR),
    ENDRET_TID                  TIMESTAMP(3),
    BEHANDLING_RESULTAT_TYPE    VARCHAR2(100 CHAR) DEFAULT 'IKKE_FASTSATT' NOT NULL,
    AVSLAG_ARSAK                VARCHAR2(100 CHAR),
    AVSLAG_ARSAK_FRITEKST       VARCHAR2(1500 CHAR),
    KL_BEHANDLING_RESULTAT_TYPE VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('BEHANDLING_RESULTAT_TYPE') VIRTUAL VISIBLE NOT NULL,
    KL_AVSLAGSARSAK             VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('AVSLAGSARSAK') VIRTUAL VISIBLE,
    RETTEN_TIL                  VARCHAR2(100 CHAR) NOT NULL,
    KL_RETTEN_TIL               VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('RETTEN_TIL') VIRTUAL VISIBLE,
    KONSEKVENS_FOR_YTELSEN      VARCHAR2(100 CHAR) NOT NULL,
    KL_KONSEKVENS_FOR_YTELSEN   VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('KONSEKVENS_FOR_YTELSEN') VIRTUAL VISIBLE,
    VEDTAKSBREV                 VARCHAR2(100 CHAR) NOT NULL,
    KL_VEDTAKSBREV              VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('VEDTAKSBREV') VIRTUAL VISIBLE,
    OVERSKRIFT                  VARCHAR2(200 CHAR),
    FRITEKSTBREV                CLOB,
    CONSTRAINT PK_BEHANDLING_RESULTAT PRIMARY KEY (ID)
  );

  CREATE SEQUENCE SEQ_BEHANDLING_RESULTAT MINVALUE 1 START WITH 1 INCREMENT BY 50 NOCACHE NOCYCLE;

  CREATE INDEX IDX_BEHANDLING_RESULTAT_1 ON BEHANDLING_RESULTAT (BEHANDLING_ID);
  CREATE INDEX IDX_BEHANDLING_RESULTAT_2 ON BEHANDLING_RESULTAT (BEHANDLING_RESULTAT_TYPE);
  CREATE INDEX IDX_BEHANDLING_RESULTAT_3 ON BEHANDLING_RESULTAT (RETTEN_TIL, KL_RETTEN_TIL);
  CREATE INDEX IDX_BEHANDLING_RESULTAT_4 ON BEHANDLING_RESULTAT (AVSLAG_ARSAK);
  CREATE INDEX IDX_BEHANDLING_RESULTAT_6 ON BEHANDLING_RESULTAT (KONSEKVENS_FOR_YTELSEN, KL_KONSEKVENS_FOR_YTELSEN);
  CREATE INDEX IDX_BEHANDLING_RESULTAT_7 ON BEHANDLING_RESULTAT (VEDTAKSBREV, KL_VEDTAKSBREV);

  ALTER TABLE BEHANDLING_RESULTAT ADD CONSTRAINT FK_BEHANDLING_RESULTAT_3 FOREIGN KEY (BEHANDLING_ID) REFERENCES BEHANDLING (ID) ENABLE;
  ALTER TABLE BEHANDLING_RESULTAT ADD CONSTRAINT FK_BEHANDLING_RESULTAT_6 FOREIGN KEY (AVSLAG_ARSAK, KL_AVSLAGSARSAK) REFERENCES KODELISTE (KODE, KODEVERK) ENABLE;
  ALTER TABLE BEHANDLING_RESULTAT ADD CONSTRAINT FK_BEHANDLING_RESULTAT_80 FOREIGN KEY (BEHANDLING_RESULTAT_TYPE, KL_BEHANDLING_RESULTAT_TYPE) REFERENCES KODELISTE (KODE, KODEVERK) ENABLE;
  ALTER TABLE BEHANDLING_RESULTAT ADD CONSTRAINT FK_BEHANDLING_RESULTAT_81 FOREIGN KEY (RETTEN_TIL, KL_RETTEN_TIL) REFERENCES KODELISTE (KODE, KODEVERK) ENABLE;
  ALTER TABLE BEHANDLING_RESULTAT ADD CONSTRAINT FK_BEHANDLING_RESULTAT_82 FOREIGN KEY (KONSEKVENS_FOR_YTELSEN, KL_KONSEKVENS_FOR_YTELSEN) REFERENCES KODELISTE (KODE, KODEVERK) ENABLE;
  ALTER TABLE BEHANDLING_RESULTAT ADD CONSTRAINT FK_BEHANDLING_RESULTAT_83 FOREIGN KEY (VEDTAKSBREV, KL_VEDTAKSBREV) REFERENCES KODELISTE (KODE, KODEVERK) ENABLE;

  COMMENT ON COLUMN BEHANDLING_RESULTAT.ID IS 'Primary Key';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.BEHANDLING_ID IS 'FK: BEHANDLING Fremmednøkkel for kobling til behandling';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.BEHANDLING_RESULTAT_TYPE IS 'Resultat av behandlingen';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.AVSLAG_ARSAK IS 'Årsakskode for avslag. Foreign key til AVSLAGSARSAK.';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.AVSLAG_ARSAK_FRITEKST IS 'Begrunnelse for avslag av søknad.';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.KL_BEHANDLING_RESULTAT_TYPE IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.KL_AVSLAGSARSAK IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.RETTEN_TIL IS 'FK: RETTEN_TIL';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.KL_RETTEN_TIL IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.KONSEKVENS_FOR_YTELSEN IS 'FK: KONSEKVENS_FOR_YTELSEN';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.KL_KONSEKVENS_FOR_YTELSEN IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.VEDTAKSBREV IS 'FK: VEDTAKSBREV';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.KL_VEDTAKSBREV IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.OVERSKRIFT IS 'Overskrift felt brukt som hovedoverskrift i frikestbrev';
  COMMENT ON COLUMN BEHANDLING_RESULTAT.FRITEKSTBREV IS 'Fritekstbrev felt brukt som hovedoverskrift i frikestbrev';
  COMMENT ON TABLE BEHANDLING_RESULTAT  IS 'Beregningsresultat. Knytter sammen beregning og behandling.';

--------------------------------------------------------
--  DDL for Table BEHANDLING_VEDTAK
--------------------------------------------------------

CREATE TABLE BEHANDLING_VEDTAK (
  ID                      NUMBER(19, 0)                               NOT NULL,
  VEDTAK_DATO             DATE                                        NOT NULL,
  ANSVARLIG_SAKSBEHANDLER VARCHAR2(40 CHAR)                           NOT NULL,
  BEHANDLING_RESULTAT_ID  NUMBER(19, 0)                               NOT NULL,
  VEDTAK_RESULTAT_TYPE    VARCHAR2(100 CHAR)                          NOT NULL,
  VERSJON                 NUMBER(19, 0) DEFAULT 0                     NOT NULL,
  OPPRETTET_AV            VARCHAR2(20 CHAR) DEFAULT 'VL'              NOT NULL,
  OPPRETTET_TID           TIMESTAMP(3) DEFAULT systimestamp           NOT NULL,
  ENDRET_AV               VARCHAR2(20 CHAR),
  ENDRET_TID              TIMESTAMP(3),
  IVERKSETTING_STATUS     VARCHAR2(100 CHAR) DEFAULT 'IKKE_IVERKSATT' NOT NULL,
  KL_IVERKSETTING_STATUS  VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('IVERKSETTING_STATUS') VIRTUAL VISIBLE NOT NULL,
  KL_VEDTAK_RESULTAT_TYPE VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('VEDTAK_RESULTAT_TYPE') VIRTUAL VISIBLE NOT NULL,
  BESLUTNING              CHAR(1 BYTE) DEFAULT 'N'                    NOT NULL,
  CONSTRAINT PK_BEHANDLING_VEDTAK PRIMARY KEY (ID)
);

CREATE SEQUENCE SEQ_BEHANDLING_VEDTAK MINVALUE 1 START WITH 1 INCREMENT BY 50 NOCACHE NOCYCLE;

CREATE UNIQUE INDEX UIDX_BEHANDLING_VEDTAK_1 ON BEHANDLING_VEDTAK (BEHANDLING_RESULTAT_ID);

CREATE INDEX IDX_VEDTAK_1 ON BEHANDLING_VEDTAK (VEDTAK_RESULTAT_TYPE);
CREATE INDEX IDX_VEDTAK_2 ON BEHANDLING_VEDTAK (ANSVARLIG_SAKSBEHANDLER);
CREATE INDEX IDX_VEDTAK_3 ON BEHANDLING_VEDTAK (VEDTAK_DATO);
CREATE INDEX IDX_BEHANDLING_VEDTAK_1 ON BEHANDLING_VEDTAK (IVERKSETTING_STATUS);

ALTER TABLE BEHANDLING_VEDTAK ADD CONSTRAINT FK_BEHANDLING_VEDTAK_1 FOREIGN KEY (BEHANDLING_RESULTAT_ID) REFERENCES BEHANDLING_RESULTAT (ID) ENABLE;
ALTER TABLE BEHANDLING_VEDTAK ADD CONSTRAINT FK_BEHANDLING_VEDTAK_2 FOREIGN KEY (IVERKSETTING_STATUS, KL_IVERKSETTING_STATUS) REFERENCES KODELISTE (KODE, KODEVERK) ENABLE;
ALTER TABLE BEHANDLING_VEDTAK ADD CONSTRAINT FK_BEHANDLING_VEDTAK_3 FOREIGN KEY (VEDTAK_RESULTAT_TYPE, KL_VEDTAK_RESULTAT_TYPE) REFERENCES KODELISTE (KODE, KODEVERK) ENABLE;

COMMENT ON COLUMN BEHANDLING_VEDTAK.ID IS 'Primary Key';
COMMENT ON COLUMN BEHANDLING_VEDTAK.VEDTAK_DATO IS 'Vedtaksdato.';
COMMENT ON COLUMN BEHANDLING_VEDTAK.ANSVARLIG_SAKSBEHANDLER IS 'Ansvarlig saksbehandler som godkjente vedtaket.';
COMMENT ON COLUMN BEHANDLING_VEDTAK.BEHANDLING_RESULTAT_ID IS 'FK:BEHANDLING_RESULTAT Fremmednøkkel til tabellen som viser behandlingsresultatet';
COMMENT ON COLUMN BEHANDLING_VEDTAK.VEDTAK_RESULTAT_TYPE IS 'FK:VEDTAK_RESULTAT_TYPE Fremmednøkkel til tabellen som viser innholdet i vedtaket';
COMMENT ON COLUMN BEHANDLING_VEDTAK.IVERKSETTING_STATUS IS 'Status for iverksettingssteget';
COMMENT ON COLUMN BEHANDLING_VEDTAK.KL_IVERKSETTING_STATUS IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
COMMENT ON COLUMN BEHANDLING_VEDTAK.KL_VEDTAK_RESULTAT_TYPE IS 'Referanse til KODEVERK-kolonnen i KODELISTE-tabellen';
COMMENT ON COLUMN BEHANDLING_VEDTAK.BESLUTNING IS 'Er det tatt en beslutning i vedtaket';
COMMENT ON TABLE BEHANDLING_VEDTAK  IS 'Vedtak koblet til en behandling via et behandlingsresultat.';
